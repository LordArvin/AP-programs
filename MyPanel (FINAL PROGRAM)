import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;

import javax.swing.JPanel;

public class MyPanel extends JPanel
{
	public MyPanel( )
	{
		numC = 0;
		numS = 0;
		setPreferredSize(new Dimension(300, 300));
		setBackground(Color.WHITE);
	}
	
	/**
	 * Draw the circles or the squares.  One of the instance fields
	 * should be zero and the other nonzero.
	 */
	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		Graphics2D g2 = (Graphics2D)g;
		
		double count = numC + numS;  //let count = the number of objects to be drawn
		double size = Math.min(getHeight(), getWidth()); // let size = the minimum of the width and height of the panel
		double gap = 0.4 * size / count;// then let gap between one circle or square and the next one is:  0.4 * size / count
		//the above line assumes that the drawing will take place on the center 80% of the panel
		
		// determine the x and y coordinates of the center of the panel
		double x = getWidth()/2;
		double y = getHeight()/2;
		
		// within a loop:  draw the required number of circles
		if(numC > 0) {
			for(int i = 1; i <= count; i++){
			double r = size/2 - (gap*i);
			g2.draw(new Ellipse2D.Double(x - r, y - r, r*2, r*2));
			
			}
		}
		
		
		// within a loop:  draw the required number of squares
		if(numS > 0) {
			for(int i = 1; i <= count; i++) {
				double r = size/2 - (gap*i);
				
				g2.draw(new Rectangle2D.Double(x - r, y - r, r*2, r*2));

			}
		}
	}
	
	/**
	 * This is the method called from the actionPerformed method of the ButtonListener
	 * class.  One of the parameters should be zero and the other nonzero.
	 * @param circles: the number of circles to draw
	 * @param squares: the number of squares to draw
	 */
	public void setData(int circles, int squares)
	{
		numC = circles;
		numS = squares;
		repaint( );
	}
	
	/**
	 * The instance fields represent the number of circles and the number of
	 * squares to be drawn.
	 */
	private int numC;
	private int numS;
}
