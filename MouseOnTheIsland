
import java.util.Random;

public class Island {
	
	public Island(){
		
		mRow1 = 4;
		mCol1 = 7;
		island = new int[9][14];
		generator = new Random();
		int n;
		
		for(int i = 0; i < 14; i++){
			
			n = generator.nextInt(100)+1;
			if(n <= PERCENT_BRIDGES){
				island[0][i] = -1;
			}
			n = generator.nextInt(100)+1;
			if(n >= PERCENT_BRIDGES){
				island[8][i] = -1;
			}
			
			if(i<=8){
				n = generator.nextInt(100)+1;
				if(n >= PERCENT_BRIDGES){
					island[i][0] = -1;
				}
				n = generator.nextInt(100)+1;
				if(n <= PERCENT_BRIDGES){
					island[i][13] = -1;
				}
			}
		}
		printIsland();
		
	
	}
	
	
	
	public void printIsland(){

		for(int row = 0; row < 9; row++){
			for(int column = 0; column < 14; column++){
				
			if((row == 0 || column == 0)||(row == 8 || column==13)){
				
				if(island[row][column] == -1){
					System.out.print("  W");
				}
				else if(island[row][column] == 0){
					System.out.print("  B");
				}
				continue;
			}
			System.out.print(String.format("%3d", island[row][column]));
			}
			System.out.println(" " + moveAbout());
			
		}
		System.out.println();
		
		}
		
			
				
			
		

	
	public String moveAbout(){
		
		String state = "Searching";
		mRow1 = 4;
		mCol1 = 7;
		
		int row = mRow1;
		int col = mCol1;
		
	for(int i = 0; i < 50; i++) {
		generator = new Random();
		int n = generator.nextInt(4) + 1;
		
		if(n == 1 && (row < 8 && row > 0) && (col < 15 && col > 0)) {
			island[row][col] = island[row ][col] + 1; // the spot one above it increases by one plus the amount that was there before :)
			row = row + 1;

			moves++;
		}
		else if(n == 2 && (row < 8 && row > 0) && (col < 15 && col > 0)) {
			island[row][col] = island[row][col] + 2;
			col = col + 1;			
			
			moves++;
		}
		else if(n == 3 && (row < 8 && row > 0) && (col < 15 && col > 0)) {
			island[row][col] = island[row][col] + 3;
			row = row - 1;
			
			moves++;
		}
		else if(n == 4 && (row < 8 && row > 0) && (col < 15 && col > 0)) {
			island[row][col] = island[row][col] + 4;
			col = col - 1;
			
			moves++;

		}
		
		if(island[row][col] == -1 && (row == 0 || row == 9) && (col == 0 || col == 13)) {
			state = "The mouse has drowned on turn " + (moves - 1) + ":(";
		}
		else if(island[row][col] == 0 && (row == 0 || row == 8) && (col == 0 || col == 13))
			state = "The mouse has escaped on turn " + (moves - 1) + ":D";
	
		else if(state.equalsIgnoreCase("Searching") && moves > 49 && row < 9 && row > 0 && col > 0 && col < 15) {
			state = "The mouse has starved on turn " + moves + " :(";
			
		}
		
		else if(state.equalsIgnoreCase("Drowned")) {
			state = "The mouse has drowned :(";
		}
		else if(state.equalsIgnoreCase("Escaped")) {
			state = "The mouse has escaped :D";
		}
		
	
	} // ???????????????????????????????????????????????????????? IDK ???????????????????????????????????????????????????????????????
	
		return state;
	}
	
	
	private int[][] island;
	private int moves;
	private int mRow1;
	private int mCol1;
	private Random generator;
	private final int PERCENT_BRIDGES  = 30;
	
}
