
import java.util.Random;

public class Island {
	
	public Island(){
		
		island = new int[9][14];
		generator = new Random();
		int n;
		
		for(int i = 0; i < 14; i++){
			
			n = generator.nextInt(100)+1;
			if(n <= PERCENT_BRIDGES){
				island[0][i] = -1;
			}
			n = generator.nextInt(100)+1;
			if(n >= PERCENT_BRIDGES){
				island[8][i] = -1;
			}
			
			if(i<=8){
				n = generator.nextInt(100)+1;
				if(n >= PERCENT_BRIDGES){
					island[i][0] = -1;
				}
				n = generator.nextInt(100)+1;
				if(n >= PERCENT_BRIDGES){
					island[i][13] = -1;
				}
			}
		}
		printIsland();
	
	}
	
	
	
	public void printIsland(){

		for(int row = 0; row < 9; row++){
			
			for(int column = 0; column < 14; column++){
				
			if((row == 0 || column == 0)||(row == 8 || column == 13)){
				
				if(island[row][column] == -1){
					System.out.print("  W");
				}
				else if(island[row][column] == 0){
					System.out.print("  B");
				}
				else {
					System.out.print("  THE NUMERO ES: "+island[row][column]);
				}
				continue;
			}
			System.out.print(String.format("%3d", island[row][column]));
			}
			moveAbout();
			
			System.out.println(" ");
			
			
		}
		System.out.println(moveAbout());
		System.out.println();
		
		}
		
			
				
			
		

	
	public String moveAbout(){
				
		int row = 4;
		int col = 7;

		for(int i = 0; i < 50; i++) {
			generator = new Random();
			int n = generator.nextInt(4) + 1;
			
			if(	moves < 50) {
				if(!(row == 0 || col == 0)||(row == 8 || col == 13)){
					
					if(n == 1) {
						island[row][col] = moves; 
						row++;
						
					}
					else if(n == 2) {
						island[row][col] = moves;
						col++;		
						
					}
					else if(n == 3) {
						island[row][col] = moves;
						row--;
						
					}
					else if(n == 4) {
						island[row][col] = moves;
						col--;
						
					}
				} 		
				moves++;
			}
		
		if(row == 0 || row == 8 || col == 0 || col == 13){
	  		if(island[row][col] == -1) {
	  			return "Drowned on turn " + moves;
			}
	  		else if(island[row][col] == 0){
	  			return "Escaped on turn " + moves;
	  		}
	  		moves = 51;
		}
		else if(moves >= 50){
			moves = 0;
				return "starved";
				
		}
		
			
	}
		
		
		return "FAIL";
	}
	
	public void printStats(int x, int y, int z){
		System.out.println("escapes: " + z);
		System.out.println("starves: " + y);
		System.out.println("drowns: " + z);
		
	}
	

	private int[][] island;
	private int moves;
	private Random generator;
	private final int PERCENT_BRIDGES  = 30;

}

